{"version":3,"sources":["dashboard/PanelGrid.tsx","format/ButtonFormat.tsx","AppDashboard.tsx","assets/svg/themes.svg","dashboard/Dashboard.tsx","dashboard/DashboardMenu.tsx","units/InputUnit.tsx","units/ButtonUnit.tsx","units/SwitchUnit.tsx","units/ViewUnit.tsx","units/SliderUnit.tsx","mqtt/MQTTProvider.tsx","format/ValueFormat.ts","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx","gauge/svgdraw.ts","gauge/LinearGauge.tsx","gauge/ProgressGauge.tsx","gauge/DashboardGauge.tsx","gauge/SimpleGauge.tsx","gauge/CircularGauge.tsx","gauge/MetroGauge.tsx","gauge/SpaceGauge.tsx","gauge/LiquidGauge.tsx","gauge/DialGauge.tsx","gauge/FuelGauge.tsx","gauge/ControlGauge.tsx","format/GaugeFormat.tsx","format/IconFormat.tsx","AppHeader.tsx","connection/UploadRaw.tsx","connection/ContentConnect.tsx","App.tsx","AppError.tsx"],"names":["C","className","children","xs","sm","md","lg","CCard","title","size","PanelGrid","gutter","LiteralIconValueFormat","text","message","toIcon","b","toDisplay","Error","fromDisplay","s","next","prev","ImageIconValueFormat","component","style","fontSize","TitleIconValueFormat","AppDashboard","React","memo","jsx","css","rel","type","href","btoa","renderInWrapper","bindings","Buffer","HEXValueFormat","Base64ValueFormat","SwitchValueFormat","NumberValueFormat","BulbIconFormat","ThuderboltIconFormat","SwitchIconValueFormat","NumberIconFormat","DashboardIconFormat","LinearIconFormat","SimpleIconFormat","CircularIconFormat","MetroIconFormat","ProgressIconFormat","SpaceIconFormat","LiquidIconFormat","DialIconFormat","FuelIconFormat","ControlIconFormat","Themes","components","AlertFilled","ApiFilled","AudioFilled","BankFilled","BellFilled","BookFilled","BugFilled","BuildFilled","BulbFilled","CameraFilled","CarFilled","DashboardFilled","PictureFilled","Row","Col","Dashboard","DashboardMenu","InputUnit","ButtonUnit","SwitchUnit","ViewUnit","SliderUnit","renderError","error","renderUnrecognized","tagname","_defs","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgThemes","_ref","svgRef","titleId","props","viewBox","id","ref","undefined","fill","fillOpacity","fillRule","stroke","strokeWidth","strokeMiterlimit","strokeDasharray","strokeOpacity","d","ForwardRef","DISCONNECTKEY","toolbar","disconnectMenu","useMQTTContext","hostname","status","setConnected","useAppContext","useState","panelkey","setPanelkey","visibleDrawer","setVisibleDrawer","hideDrawer","useEffect","window","scrollTo","color","child","menus","index","Children","forEach","c","push","Item","icon","name","onClick","ghost","Content","placement","closable","onClose","visible","theme","mode","selectedKeys","toString","onSelect","Divider","pubtopic","subtopic","puboptions","suboptions","format","StrValueFormat","connected","ready","publish","Form","useForm","form","setFieldsValue","mqttValue","useMQTTSubscribe","topic","mqttmessage","Math","random","substr","padEnd","onFinish","values","wrap","flex","rules","validator","_","value","Promise","resolve","reject","autoComplete","readOnly","bordered","disabled","lineHeight","htmlType","LabelIconValueFormat","from","buffer","setBuffer","width","height","ev","checked","setChecked","onChange","StrIconFormat","numberValidation","Number","min","max","step","onAfterChange","MQTTContext","createContext","connect","disconnect","subscribe","unsubscribe","useContext","callback","options","handler","MQTTProvider","_internal","subscriptions","Map","state","setState","client","online","qos","retain","end","removeAllListeners","clear","url","connectoptions","will","payload","mqtt","on","subs","match","listener","set","some","Array","entries","filter","inx","findIndex","splice","Provider","locale","navigator","language","intl","Intl","NumberFormat","parts","formatToParts","numerals","useGrouping","split","reverse","map","group","RegExp","find","decimal","currency","unit","join","numeral","getindex","get","strans","trim","replace","isLocalhost","Boolean","location","registerValidSW","swUrl","config","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","URL","process","origin","addEventListener","fetch","headers","response","contentType","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","piepath","cx","cy","r","start","orientation","cos","sin","arcpath","sweep","padvalue","lengthvalue","LinearGauge","formatvalue","valueformat","labelstep","intlvalue","isNaN","lines","mark","x1","y1","x2","y2","x","y","textAnchor","xmlns","version","ProgressGauge","rx","DashboardGauge","arcvalue","PI","opacity","SimpleGauge","angle","r1","sinr2","cosr2","r2","centerx","centery","transform","CircularGauge","MetroGauge","SpaceGauge","LiquidGauge","yvalue","clipPath","DialGauge","FuelGauge","startangle","endangle","arctotal","ControlGauge","arcvaluerad","arctotalrad","CreateGaugesIconFormat","Component","gaugeprops","readNumber","twoToneColor","ToIconFormat","ToIconValueFormat","iconformat","LabelIconFormat","AppHeader","Header","UploadRaw","accept","span","e","data","multiple","fileList","beforeUpload","file","reader","FileReader","readAsDataURL","onloadend","urldata","result","maxCount","UploadOutlined","DownloadOutlined","dataurl","a","createElement","download","body","appendChild","click","removeChild","TextArea","PanelConnect","TabPane","Tabs","item","localStorage","getItem","JSON","parse","username","password","clientId","keepalive","connectTimeout","reconnectPeriod","onlinetopic","onlineqos","dashboard","dashboardcss","connectinfo","setItem","stringify","defaultActiveKey","tab","forceRender","htmlFor","required","Password","offset","Group","AppContext","MQTTApp","app","setStateValue","useCallback","removeItem","useLocalStorage","AppError"],"mappings":"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","file":"static/js/main.4f5996a8.chunk.js","sourcesContent":["import React from \"react\"; // FC functional control.\nimport { Card, Row, Col } from \"antd\";\n\nimport \"antd/dist/antd.css\";\nimport \"../assets/main.css\";\n\nexport type CProps = {\n  className?: string;\n  children: React.ReactNode;\n};\n\nexport const C: React.FC<CProps> = ({ className, children }) => (\n  <Col className={className} xs={24} sm={12} md={12} lg={6}>\n    {children}\n  </Col>\n);\n\nexport type CCardProps = {\n  title?: string;\n  className?: string;\n  children: React.ReactNode;\n};\n\nexport const CCard: React.FC<CCardProps> = ({ title, className, children }) => (\n  <C>\n    <Card className={`myh-card ${className || \"\"}`} size=\"small\" title={title}>\n      {children}\n    </Card>\n  </C>\n);\n\nexport type PanelGridProps = {\n  className?: string;\n  children: React.ReactNode;\n};\n\nconst PanelGrid: React.FC<PanelGridProps> = ({ className, children }) => (\n  <div className={`myhAppContent-panel ${className || \"\"}`}>\n    <Row\n      gutter={[\n        { xs: 8, sm: 8, md: 8, lg: 8 },\n        { xs: 8, sm: 8, md: 8, lg: 8 },\n      ]}\n    >\n      {children}\n    </Row>\n  </div>\n);\n\nexport default PanelGrid;\n","import React, { ComponentType } from \"react\";\nimport Icon from \"@ant-design/icons\";\nimport { CustomIconComponentProps } from \"@ant-design/icons/lib/components/Icon\";\nimport { SVGProps } from \"react\";\nimport { IconFormat, IconValueFormat } from \"./FormatTypes\";\n\nexport function LiteralIconFormat(text: string): IconFormat {\n  return {\n    toIcon: (b: Buffer) => text || \"\\u00A0\",\n  };\n}\n\nexport function ImageIconFormat(\n  component:\n    | ComponentType<CustomIconComponentProps | SVGProps<SVGSVGElement>>\n    | undefined\n): IconFormat {\n  return {\n    toIcon: (b: Buffer) => (\n      <Icon component={component} style={{ fontSize: \"180%\" }} />\n    ),\n  };\n}\n\nexport function TitleIconFormat(\n  component:\n    | ComponentType<CustomIconComponentProps | SVGProps<SVGSVGElement>>\n    | undefined,\n  text: string\n): IconFormat {\n  return {\n    toIcon: (b: Buffer) => (\n      <>\n        <Icon component={component} style={{ fontSize: \"120%\" }} />\n        <div style={{ fontSize: \"14px\" }}>{text || \"\\u00A0\"}</div>\n      </>\n    ),\n  };\n}\n\nexport function LiteralIconValueFormat(\n  text: string,\n  message: Buffer\n): IconValueFormat {\n  return {\n    toIcon: (b: Buffer) => text,\n    toDisplay: (b: Buffer) => {\n      throw new Error();\n    },\n    fromDisplay: (s: string) => {\n      throw new Error();\n    },\n    className: () => {\n      throw new Error();\n    },\n    next: (b: Buffer) => message,\n    prev: (b: Buffer) => message,\n  };\n}\n\nexport function ImageIconValueFormat(\n  component:\n    | ComponentType<CustomIconComponentProps | SVGProps<SVGSVGElement>>\n    | undefined,\n  message: Buffer\n): IconValueFormat {\n  return {\n    toIcon: (b: Buffer) => (\n      <Icon component={component} style={{ fontSize: \"180%\" }} />\n    ),\n    toDisplay: (b: Buffer) => {\n      throw new Error();\n    },\n    fromDisplay: (s: string) => {\n      throw new Error();\n    },\n    className: () => {\n      throw new Error();\n    },\n    next: (b: Buffer) => message,\n    prev: (b: Buffer) => message,\n  };\n}\n\nexport function TitleIconValueFormat(\n  component:\n    | ComponentType<CustomIconComponentProps | SVGProps<SVGSVGElement>>\n    | undefined,\n  text: string,\n  message: Buffer\n): IconValueFormat {\n  return {\n    toIcon: (b: Buffer) => (\n      <>\n        <Icon component={component} style={{ fontSize: \"120%\" }} />\n        <div style={{ fontSize: \"14px\" }}>{text || \"\\u00A0\"}</div>\n      </>\n    ),\n    toDisplay: (b: Buffer) => {\n      throw new Error();\n    },\n    fromDisplay: (s: string) => {\n      throw new Error();\n    },\n    className: () => {\n      throw new Error();\n    },\n    next: (b: Buffer) => message,\n    prev: (b: Buffer) => message,\n  };\n}\n","// @ts-nocheck\nimport React from \"react\";\nimport { Row, Col } from \"antd\";\nimport {\n  AlertFilled,\n  ApiFilled,\n  AudioFilled,\n  BankFilled,\n  BellFilled,\n  BookFilled,\n  BugFilled,\n  BuildFilled,\n  BulbFilled,\n  CameraFilled,\n  CarFilled,\n  DashboardFilled,\n  PictureFilled,\n} from \"@ant-design/icons\";\nimport { ReactComponent as Themes } from \"./assets/svg/themes.svg\";\nimport JsxParser from \"react-jsx-parser\";\n\nimport PanelGrid, { C, CCard } from \"./dashboard/PanelGrid\";\nimport Dashboard from \"./dashboard/Dashboard\";\nimport DashboardMenu from \"./dashboard/DashboardMenu\";\nimport InputUnit from \"./units/InputUnit\";\nimport ButtonUnit from \"./units/ButtonUnit\";\nimport SwitchUnit from \"./units/SwitchUnit\";\nimport ViewUnit from \"./units/ViewUnit\";\nimport SliderUnit from \"./units/SliderUnit\";\n\nimport {\n  HEXValueFormat,\n  Base64ValueFormat,\n  SwitchValueFormat,\n  NumberValueFormat,\n} from \"./format/ValueFormat\";\nimport {\n  TitleIconValueFormat,\n  LiteralIconValueFormat,\n  ImageIconValueFormat,\n} from \"./format/ButtonFormat\";\nimport {\n  BulbIconFormat,\n  ThuderboltIconFormat,\n  SwitchIconValueFormat,\n  NumberIconFormat,\n} from \"./format/IconFormat\";\nimport {\n  DashboardIconFormat,\n  LinearIconFormat,\n  SimpleIconFormat,\n  CircularIconFormat,\n  MetroIconFormat,\n  ProgressIconFormat,\n  SpaceIconFormat,\n  LiquidIconFormat,\n  DialIconFormat,\n  FuelIconFormat,\n  ControlIconFormat,\n} from \"./format/GaugeFormat\";\nimport AppError from \"./AppError\";\nimport \"./assets/main.css\";\n\nconst AppDashboard: React.FC<{ jsx: string; css?: string }> = React.memo(\n  ({ jsx, css }) => (\n    <>\n      {css && (\n        <link\n          rel=\"stylesheet\"\n          type=\"text/css\"\n          href={`data:text/css;base64,${btoa(css)}`}\n        ></link>\n      )}\n      <JsxParser\n        renderInWrapper={false}\n        bindings={{\n          Buffer,\n          HEXValueFormat,\n          Base64ValueFormat,\n          SwitchValueFormat,\n          NumberValueFormat,\n          TitleIconValueFormat,\n          LiteralIconValueFormat,\n          ImageIconValueFormat,\n          BulbIconFormat,\n          ThuderboltIconFormat,\n          SwitchIconValueFormat,\n          NumberIconFormat,\n          DashboardIconFormat,\n          LinearIconFormat,\n          SimpleIconFormat,\n          CircularIconFormat,\n          MetroIconFormat,\n          ProgressIconFormat,\n          SpaceIconFormat,\n          LiquidIconFormat,\n          DialIconFormat,\n          FuelIconFormat,\n          ControlIconFormat,\n          Themes,\n        }}\n        components={{\n          AlertFilled,\n          ApiFilled,\n          AudioFilled,\n          BankFilled,\n          BellFilled,\n          BookFilled,\n          BugFilled,\n          BuildFilled,\n          BulbFilled,\n          CameraFilled,\n          CarFilled,\n          DashboardFilled,\n          PictureFilled,\n          Row,\n          Col,\n          Dashboard,\n          DashboardMenu,\n          PanelGrid,\n          C,\n          CCard,\n          InputUnit,\n          ButtonUnit,\n          SwitchUnit,\n          ViewUnit,\n          SliderUnit,\n        }}\n        jsx={jsx}\n        renderError={({ error }) => (\n          <AppError\n            title=\"Failed to compile JSX code.\"\n            error={error}\n            jsx={jsx}\n          />\n        )}\n        renderUnrecognized={(tagname) => (\n          <AppError\n            title=\"Failed to execute JSX code.\"\n            error={`Unrecongnized tag: ${tagname}`}\n          />\n        )}\n      />\n    </>\n  )\n);\n\nexport default AppDashboard;\n","var _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgThemes(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 122.88 122.88\",\n    \"data-name\": \"Layer 1\",\n    id: \"Layer_1\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", {\n    id: \"defs817\"\n  }, /*#__PURE__*/React.createElement(\"style\", {\n    id: \"style815\"\n  }, \"\\n      .cls-1 {\\n        fill: #ffffff;\\n      }\\n\\n      .cls-1,\\n      .cls-2,\\n      .cls-3,\\n      .cls-4,\\n      .cls-5 {\\n        fill-rule: evenodd;\\n      }\\n\\n      .cls-2 {\\n        fill: #fb434c;\\n      }\\n\\n      .cls-3 {\\n        fill: #33a867;\\n      }\\n\\n      .cls-4 {\\n        fill: #47bcff;\\n      }\\n\\n      .cls-5 {\\n        fill: #fdba21;\\n      }\\n    \"))), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId || \"title819\"\n  }, \"themes\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId || \"title819\"\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    style: {\n      fill: \"#ffffff\",\n      fillOpacity: 1,\n      fillRule: \"evenodd\",\n      stroke: \"#6c6c6c\",\n      strokeWidth: 0.97290999,\n      strokeMiterlimit: 0,\n      strokeDasharray: \"none\",\n      strokeOpacity: 1\n    },\n    id: \"path821\",\n    d: \"m 78.87941,37.034552 7.267638,7.267637 a 1.6150306,1.6150306 0 0 1 0,2.257151 l -11.67492,11.67492 a 1.5469269,1.5469269 0 0 1 -0.32106,0.243228 l 9.670725,9.670725 a 1.94582,1.94582 0 0 1 0,2.70469 l -1.94582,1.94582 a 1.94582,1.94582 0 0 1 -2.70469,0 L 49.857505,43.407112 a 1.94582,1.94582 0 0 1 0,-2.714419 l 1.94582,-1.94582 a 1.94582,1.94582 0 0 1 2.70469,0 l 10.205826,10.27393 a 1.6734052,1.6734052 0 0 1 0.252956,-0.321061 l 11.67492,-11.67492 a 1.6150306,1.6150306 0 0 1 2.257151,0 z m -2.724148,36.182522 -13.844509,18.125313 -6.012584,-6.012584 4.54349,-10.089076 -7.316283,7.316283 -6.246082,-6.246082 4.543489,-10.089077 -7.306554,7.316283 -5.691523,-5.72071 7.316283,-7.316284 -10.089077,4.582407 -4.387824,-4.387825 18.125314,-13.844509 z m 2.266881,-32.349257 3.891639,3.89164 a 1.1188465,1.1188465 0 0 1 0,1.576114 l -1.128575,1.128576 a 1.1285756,1.1285756 0 0 1 -1.576114,0 l -3.89164,-3.89164 a 1.1188465,1.1188465 0 0 1 0,-1.576115 l 1.128575,-1.128575 a 1.0993883,1.0993883 0 0 1 1.566385,0 z\",\n    className: \"cls-1\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path823\",\n    d: \"m 121.21072,14.579789 v 8.843752 a 2.821439,2.821439 0 0 1 -2.80198,2.81171 H 4.4712542 a 2.821439,2.821439 0 0 1 -2.8117099,-2.81171 v -8.843752 a 2.821439,2.821439 0 0 1 2.8117099,-2.81171 H 118.40874 a 2.821439,2.821439 0 0 1 2.81171,2.81171 z\",\n    className: \"cls-2\",\n    style: {\n      fill: \"#fb434c\",\n      fillRule: \"evenodd\",\n      strokeWidth: 1,\n      strokeMiterlimit: 0,\n      strokeDasharray: \"none\",\n      stroke: \"#6c6c6c\",\n      strokeOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path825\",\n    d: \"m 121.21072,100.3418 v 8.84376 a 2.821439,2.821439 0 0 1 -2.81171,2.81171 H 4.4712542 A 2.821439,2.821439 0 0 1 1.6595443,109.18556 V 100.3418 A 2.821439,2.821439 0 0 1 4.4712542,97.530095 H 118.40874 a 2.821439,2.821439 0 0 1 2.81171,2.811705 z\",\n    className: \"cls-3\",\n    style: {\n      fill: \"#33a867\",\n      fillRule: \"evenodd\",\n      strokeWidth: 1,\n      strokeMiterlimit: 0,\n      strokeDasharray: \"none\",\n      stroke: \"#6c6c6c\",\n      strokeOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path827\",\n    d: \"m 13.334464,1.6595443 h 8.853481 a 2.821439,2.821439 0 0 1 2.821439,2.8117099 V 118.40874 a 2.821439,2.821439 0 0 1 -2.81171,2.81171 h -8.86321 a 2.821439,2.821439 0 0 1 -2.840897,-2.81171 V 4.4712542 a 2.821439,2.821439 0 0 1 2.840897,-2.8117099 z\",\n    className: \"cls-4\",\n    style: {\n      fill: \"#47bcff\",\n      fillRule: \"evenodd\",\n      strokeWidth: 1,\n      strokeMiterlimit: 0,\n      strokeDasharray: \"none\",\n      stroke: \"#6c6c6c\",\n      strokeOpacity: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"path829\",\n    d: \"m 100.72124,1.6595443 h 8.85348 a 2.821439,2.821439 0 0 1 2.81171,2.8117099 V 118.40874 a 2.821439,2.821439 0 0 1 -2.81171,2.81171 h -8.85348 a 2.821439,2.821439 0 0 1 -2.81171,-2.81171 V 4.4712542 a 2.821439,2.821439 0 0 1 2.81171,-2.8117099 z\",\n    className: \"cls-5\",\n    style: {\n      fill: \"#fdba21\",\n      fillRule: \"evenodd\",\n      strokeWidth: 1,\n      strokeMiterlimit: 0,\n      strokeDasharray: \"none\",\n      stroke: \"#6c6c6c\",\n      strokeOpacity: 1\n    }\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgThemes);\nexport default __webpack_public_path__ + \"static/media/themes.8b0983ed.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport { Drawer, Button, Layout, Menu } from \"antd\";\nimport {\n  ApiFilled,\n  LoadingOutlined,\n  CheckCircleOutlined,\n  MenuUnfoldOutlined,\n} from \"@ant-design/icons\";\nimport { useMQTTContext } from \"../mqtt/MQTTProvider\";\nimport AppHeader from \"../AppHeader\";\nimport { DashboardMenuProps } from \"./DashboardMenu\";\nimport { useAppContext } from \"../App\";\n\nexport type DashboardProps = {\n  disconnectMenu: boolean;\n  className?: string;\n  children: React.ReactElement<DashboardMenuProps, any>[];\n};\n\nconst DISCONNECTKEY: React.Key = \"action-disconnect\";\n\nconst Dashboard: React.FC<DashboardProps> = ({\n  disconnectMenu,\n  className,\n  children,\n}) => {\n  const [{ hostname, status }] = useMQTTContext();\n  const { setConnected } = useAppContext();\n  const [panelkey, setPanelkey] = useState<React.Key>(\"menu-0\");\n  const [visibleDrawer, setVisibleDrawer] = useState<boolean>(false);\n\n  useEffect(() => window.scrollTo(0, 0), [panelkey]);\n\n  function handleSelect({ key }: { key: React.Key }) {\n    if (key !== DISCONNECTKEY) {\n      hideDrawer();\n      setPanelkey(key);\n    }\n  }\n\n  function handleClick({ key }: { key: string | number }) {\n    if (key === DISCONNECTKEY) {\n      hideDrawer();\n      setConnected(null);\n    }\n  }\n\n  function showDrawer() {\n    setVisibleDrawer(true);\n  }\n\n  function hideDrawer() {\n    setVisibleDrawer(false);\n  }\n\n  let toolbar;\n  if (status === \"Connected\") {\n    toolbar = (\n      <>\n        <span className=\"myhConnectionStatus-label\">{hostname}</span>\n        <span className=\"myhConnectionStatus-icon\">\n          <CheckCircleOutlined style={{ color: \"#52c41a\" }} />\n        </span>\n      </>\n    );\n  } else {\n    toolbar = (\n      <>\n        <span className=\"myhConnectionStatus-label\">{status}</span>\n        <span className=\"myhConnectionStatus-icon\">\n          <LoadingOutlined style={{ color: \"white\" }} />\n        </span>\n      </>\n    );\n  }\n\n  const menus: React.ReactElement<any, any>[] = [];\n  let child: React.ReactElement<DashboardMenuProps, any> | undefined;\n  let index = 0;\n\n  React.Children.forEach(children, (c) => {\n    if (typeof c.type !== \"symbol\") {\n      const key: React.Key = \"menu-\" + index++;\n      menus.push(\n        <Menu.Item key={key} icon={c.props.icon}>\n          {c.props.name}\n        </Menu.Item>\n      );\n      if (key === panelkey) {\n        child = c;\n      }\n    }\n  });\n\n  return (\n    <Layout className={className}>\n      <AppHeader>\n        <div className=\"myhMenuDisplayButton\">\n          <Button onClick={showDrawer} ghost>\n            <MenuUnfoldOutlined />\n          </Button>\n        </div>\n        {toolbar}\n      </AppHeader>\n      <Layout.Content className=\"myhMainLayout\">\n        <Drawer\n          className=\"myhDrawerMenu\"\n          placement=\"left\"\n          closable={false}\n          onClose={hideDrawer}\n          visible={visibleDrawer}\n        >\n          <Menu\n            theme=\"light\"\n            mode=\"inline\"\n            selectedKeys={[panelkey.toString()]}\n            onSelect={handleSelect}\n            onClick={handleClick}\n          >\n            {menus}\n            {disconnectMenu && (\n              <>\n                <Menu.Divider />\n                <Menu.Item key=\"action-disconnect\" icon={<ApiFilled />}>\n                  Disconnect\n                </Menu.Item>\n              </>\n            )}\n          </Menu>\n        </Drawer>\n        {child}\n      </Layout.Content>\n    </Layout>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\n\nimport { PictureFilled } from \"@ant-design/icons\";\n\nexport type DashboardMenuProps = {\n  icon: React.ReactNode;\n  name: string;\n  children: React.ReactNode;\n};\n\nconst DashboardMenu: React.FC<DashboardMenuProps> = ({\n  icon = <PictureFilled />,\n  name,\n  children,\n}) => <>{children}</>;\n\nexport default DashboardMenu;\n","import React, { useEffect } from \"react\"; // FC functional control.\nimport { Button, Input, Form, Row, Col } from \"antd\";\nimport { SendOutlined } from \"@ant-design/icons\";\nimport { IClientPublishOptions, IClientSubscribeOptions } from \"mqtt\";\n\nimport { useMQTTContext, useMQTTSubscribe } from \"../mqtt/MQTTProvider\";\nimport { ValueFormat } from \"../format/FormatTypes\";\nimport { StrValueFormat } from \"../format/ValueFormat\";\n\nimport \"antd/dist/antd.css\";\nimport \"../assets/main.css\";\n\ntype InputUnitProps = {\n  pubtopic?: string;\n  subtopic?: string;\n  puboptions?: IClientPublishOptions;\n  suboptions?: IClientSubscribeOptions;\n  format?: ValueFormat;\n  className?: string;\n};\n\nconst InputUnit: React.FC<InputUnitProps> = ({\n  pubtopic = \"\",\n  subtopic = \"\",\n  puboptions,\n  suboptions,\n  format = StrValueFormat(),\n  className,\n}) => {\n  const [{ connected, ready }, { publish }] = useMQTTContext();\n  const [form] = Form.useForm();\n  useEffect(() => {\n    form.setFieldsValue({\n      mqttValue: \"\",\n    });\n  }, [ready]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useMQTTSubscribe(\n    subtopic,\n    (topic: string, mqttmessage: Buffer) => {\n      form.setFieldsValue({\n        mqttValue: format.toDisplay(mqttmessage),\n      });\n    },\n    suboptions\n  );\n\n  const onFinish = (values: any) => {\n    publish(pubtopic, format.fromDisplay(values.mqttValue), puboptions);\n  };\n\n  return (\n    <Form\n      form={form}\n      name={`inputcard_${Math.random().toString(16).substr(2).padEnd(13, \"0\")}`}\n      onFinish={onFinish}\n      className={className}\n    >\n      <Row gutter={8} wrap={false}>\n        <Col flex=\"auto\">\n          <Form.Item\n            name=\"mqttValue\"\n            rules={[\n              {\n                validator: (_, value) => {\n                  try {\n                    format.fromDisplay(value);\n                    return Promise.resolve();\n                  } catch {\n                    return Promise.reject(\n                      new Error(\"Value cannot be formatted.\")\n                    );\n                  }\n                },\n              },\n            ]}\n          >\n            <Input\n              className={`myh-value ${format.className()}`}\n              autoComplete=\"off\"\n              readOnly={pubtopic === \"\"}\n              bordered={pubtopic !== \"\"}\n              disabled={!connected}\n            />\n          </Form.Item>\n        </Col>\n        {pubtopic !== \"\" && (\n          <Col flex=\"none\">\n            <Form.Item>\n              <Button\n                icon={<SendOutlined style={{ lineHeight: 1.3 }} />}\n                type=\"primary\"\n                disabled={!connected}\n                htmlType=\"submit\"\n              />\n            </Form.Item>\n          </Col>\n        )}\n      </Row>\n    </Form>\n  );\n};\nexport default InputUnit;\n","import React, { useEffect, useState, MouseEvent } from \"react\";\nimport { Button } from \"antd\";\nimport { IClientPublishOptions, IClientSubscribeOptions } from \"mqtt\";\nimport { useMQTTContext, useMQTTSubscribe } from \"../mqtt/MQTTProvider\";\nimport { IconValueFormat } from \"../format/FormatTypes\";\nimport { LabelIconValueFormat } from \"../format/IconFormat\";\nimport { SwitchValueFormat } from \"../format/ValueFormat\";\n\nimport \"antd/dist/antd.css\";\nimport \"../assets/main.css\";\n\ntype ButtonUnitProps = {\n  pubtopic: string;\n  subtopic?: string;\n  puboptions?: IClientPublishOptions;\n  suboptions?: IClientSubscribeOptions;\n  format?: IconValueFormat;\n  className?: string;\n};\n\nconst ButtonUnit: React.FC<ButtonUnitProps> = ({\n  pubtopic,\n  subtopic = \"\",\n  puboptions,\n  suboptions,\n  format = LabelIconValueFormat(SwitchValueFormat()),\n  className,\n}) => {\n  const [{ connected, ready }, { publish }] = useMQTTContext();\n  const [buffer, setBuffer] = useState<Buffer>(Buffer.from([]));\n\n  useEffect(() => {\n    setBuffer(Buffer.from([]));\n  }, [ready]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useMQTTSubscribe(\n    subtopic,\n    (topic: string, mqttmessage: Buffer) => {\n      setBuffer(mqttmessage);\n    },\n    suboptions\n  );\n\n  const onClick = (ev: MouseEvent<HTMLElement>) => {\n    const next: Buffer = format.next(buffer);\n    setBuffer(next);\n    publish(pubtopic, next, puboptions);\n  };\n\n  return (\n    <Button\n      className={`myh-value ${className || \"\"}`}\n      type=\"primary\"\n      style={{ width: \"100%\", height: \"70px\" }}\n      onClick={onClick}\n      disabled={!connected}\n    >\n      {format.toIcon(buffer)}\n    </Button>\n  );\n};\nexport default ButtonUnit;\n","import React, { useEffect, useState } from \"react\";\nimport { Switch } from \"antd\";\nimport { IClientPublishOptions, IClientSubscribeOptions } from \"mqtt\";\n\nimport { useMQTTContext, useMQTTSubscribe } from \"../mqtt/MQTTProvider\";\nimport { ValueFormat } from \"../format/FormatTypes\";\nimport { StrValueFormat } from \"../format/ValueFormat\";\n\nimport \"antd/dist/antd.css\";\nimport \"../assets/main.css\";\n\ntype SwitchUnitProps = {\n  pubtopic: string;\n  subtopic: string;\n  puboptions?: IClientPublishOptions;\n  suboptions?: IClientSubscribeOptions;\n  format?: ValueFormat;\n  className?: string;\n};\n\nconst SwitchUnit: React.FC<SwitchUnitProps> = ({\n  pubtopic,\n  subtopic,\n  puboptions,\n  suboptions,\n  format = StrValueFormat(),\n  className,\n}) => {\n  const [{ connected, ready }, { publish }] = useMQTTContext();\n  const [checked, setChecked] = useState<boolean>(false);\n\n  useEffect(() => {\n    setChecked(false);\n  }, [ready]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useMQTTSubscribe(\n    subtopic,\n    (topic: string, mqttmessage: Buffer) => {\n      setChecked(format.toDisplay(mqttmessage) === \"1\");\n    },\n    suboptions\n  );\n\n  const onChange = (value: boolean) => {\n    setChecked(value);\n    publish(pubtopic, format.fromDisplay(value ? \"1\" : \"0\"), puboptions);\n  };\n\n  return (\n    <Switch\n      checked={checked}\n      onChange={onChange}\n      disabled={!connected}\n      className={className}\n    />\n  );\n};\nexport default SwitchUnit;\n","import React, { useEffect, useState } from \"react\"; // FC functional control.\nimport { IClientSubscribeOptions } from \"mqtt\";\nimport { useMQTTContext, useMQTTSubscribe } from \"../mqtt/MQTTProvider\";\nimport { IconFormat } from \"../format/FormatTypes\";\nimport { StrIconFormat } from \"../format/IconFormat\";\n\nimport \"antd/dist/antd.css\";\nimport \"../assets/main.css\";\n\ntype ViewUnitProps = {\n  subtopic: string;\n  suboptions?: IClientSubscribeOptions;\n  format?: IconFormat;\n  className?: string;\n};\n\nconst ViewUnit: React.FC<ViewUnitProps> = ({\n  subtopic,\n  suboptions,\n  format = StrIconFormat(),\n  className,\n}) => {\n  const [{ ready }] = useMQTTContext();\n  const [buffer, setBuffer] = useState<Buffer>(Buffer.from([]));\n\n  useEffect(() => {\n    setBuffer(Buffer.from([]));\n  }, [ready]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useMQTTSubscribe(\n    subtopic,\n    (topic: string, mqttmessage: Buffer) => {\n      setBuffer(mqttmessage);\n    },\n    suboptions\n  );\n\n  return <span className={className}>{format.toIcon(buffer)}</span>;\n};\n\nexport default ViewUnit;\n","import React, { useEffect, useState } from \"react\"; // FC functional control.\nimport { Slider } from \"antd\";\nimport { IClientPublishOptions, IClientSubscribeOptions } from \"mqtt\";\nimport { useMQTTContext, useMQTTSubscribe } from \"../mqtt/MQTTProvider\";\nimport { NumberValidation } from \"../format/FormatTypes\";\nimport \"antd/dist/antd.css\";\nimport \"../assets/main.css\";\n\ntype SliderUnitProps = {\n  pubtopic: string;\n  subtopic: string;\n  puboptions?: IClientPublishOptions;\n  suboptions?: IClientSubscribeOptions;\n  numberValidation: NumberValidation;\n  className?: string;\n};\n\nconst SliderUnit: React.FC<SliderUnitProps> = ({\n  pubtopic,\n  subtopic,\n  puboptions,\n  suboptions,\n  numberValidation,\n  className,\n}) => {\n  const [{ connected, ready }, { publish }] = useMQTTContext();\n  const [buffer, setBuffer] = useState<Buffer>(Buffer.from([]));\n\n  useEffect(() => {\n    setBuffer(Buffer.from([]));\n  }, [ready]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useMQTTSubscribe(\n    subtopic,\n    (topic: string, mqttmessage: Buffer) => {\n      setBuffer(mqttmessage);\n    },\n    suboptions\n  );\n\n  const onAfterChange = (value: number) => {\n    const b = Buffer.from(value.toString());\n    publish(pubtopic, b, puboptions);\n  };\n  const onChange = (value: number) => {\n    const b = Buffer.from(value.toString());\n    setBuffer(b);\n  };\n\n  return (\n    <Slider\n      value={Number(buffer.toString())}\n      min={numberValidation.min}\n      max={numberValidation.max}\n      step={numberValidation.step}\n      onChange={onChange}\n      onAfterChange={onAfterChange}\n      disabled={!connected}\n      className={className}\n    />\n  );\n};\nexport default SliderUnit;\n","import React, {\n  createContext,\n  useState,\n  useEffect,\n  ReactNode,\n  Context,\n  useContext,\n} from \"react\";\nimport mqtt, {\n  MqttClient,\n  IClientOptions,\n  IClientSubscribeOptions,\n  IClientPublishOptions,\n  QoS,\n} from \"mqtt\";\nimport match from \"mqtt-match\";\n\nexport type MQTTStatus =\n  | \"Disconnected\"\n  | \"Connecting\"\n  | \"Closed\"\n  | \"Offline\"\n  | \"Connected\"\n  | \"Error\"\n  | \"Reconnecting\"\n  | \"Disconnecting\";\n\nexport type OnlineInfo = { topic: string; qos: QoS; retain: boolean };\n\nexport type MQTTConnectInfo = {\n  url: string;\n  online?: OnlineInfo;\n  options?: IClientOptions;\n};\n\ntype MQTTContextValue = [\n  { hostname?: string; status: MQTTStatus; ready: boolean; connected: boolean },\n  {\n    connect: ({ url, online, options }: MQTTConnectInfo) => void;\n    disconnect: () => void;\n    subscribe: (\n      topic: string,\n      callback: (topic: string, message: Buffer) => void,\n      options?: IClientSubscribeOptions\n    ) => SubscribeHandler | null;\n    unsubscribe: (handler: SubscribeHandler | null) => void;\n    publish: (\n      topic: string,\n      message: Buffer | string,\n      options?: IClientPublishOptions\n    ) => void;\n  }\n];\n\nexport type SubscribeHandler = {\n  topic: string;\n  listener: (messagetopic: string, message: Buffer) => void;\n};\n\nconst MQTTContext: Context<MQTTContextValue> = createContext<MQTTContextValue>([\n  {\n    status: \"Disconnected\",\n    ready: false,\n    connected: false,\n  },\n  {\n    connect: () => {},\n    disconnect: () => {},\n    subscribe: () => null,\n    unsubscribe: () => {},\n    publish: () => {},\n  },\n]);\n\nexport const useMQTTContext = () => useContext(MQTTContext);\n\nexport const useMQTTSubscribe = (\n  topic: string,\n  callback: (topic: string, message: Buffer) => void,\n  options?: IClientSubscribeOptions\n): void => {\n  const [{ ready }, { subscribe, unsubscribe }] = useMQTTContext();\n  useEffect(() => {\n    const handler = subscribe(topic, callback, options);\n    return () => {\n      unsubscribe(handler);\n    };\n  }, [ready, topic]); // eslint-disable-line react-hooks/exhaustive-deps\n};\n\nconst MQTTProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const [state, setState] = useState<{\n    status: MQTTStatus;\n    client?: MqttClient;\n    online?: OnlineInfo;\n    _internal: {\n      subscriptions: SubscribeHandler[];\n      values: Map<string, Buffer>;\n    };\n  }>({\n    status: \"Disconnected\",\n    _internal: { subscriptions: [], values: new Map() },\n  });\n\n  const disconnect = () => {\n    if (state.client && state.online) {\n      state.client.publish(state.online.topic, \"offline\", {\n        qos: state.online.qos,\n        retain: state.online.retain,\n      });\n    }\n    state.client?.end();\n    state.client?.removeAllListeners();\n    setState((s) => {\n      s._internal.values.clear();\n      return {\n        status: \"Disconnected\",\n        _internal: s._internal,\n      };\n    });\n  };\n\n  const connect = ({ url, online, options }: MQTTConnectInfo) => {\n    disconnect();\n\n    let connectoptions: IClientOptions = { ...options };\n    if (online) {\n      connectoptions = {\n        ...connectoptions,\n        will: {\n          ...online,\n          payload: \"offline\",\n        },\n      };\n    }\n\n    const client: MqttClient = mqtt.connect(url, connectoptions);\n    client.on(\"connect\", () => {\n      setState((s) => {\n        if (s.client && s.online) {\n          s.client.publish(s.online.topic, \"online\", {\n            qos: s.online.qos,\n            retain: s.online.retain,\n          });\n        }\n\n        return {\n          status: \"Connected\",\n          client: s.client,\n          online: s.online,\n          _internal: s._internal,\n        };\n      });\n    });\n    client.on(\"error\", (error) => {\n      setState((s) => ({\n        status: \"Error\",\n        client: s.client,\n        online: s.online,\n        _internal: s._internal,\n      }));\n    });\n    client.on(\"reconnect\", () => {\n      setState((s) => ({\n        status: \"Reconnecting\",\n        client: s.client,\n        online: s.online,\n        _internal: s._internal,\n      }));\n    });\n    client.on(\"close\", () => {\n      setState((s) => ({\n        status: \"Closed\",\n        client: s.client,\n        online: s.online,\n        _internal: s._internal,\n      }));\n    });\n    client.on(\"offline\", () => {\n      setState((s) => ({\n        status: \"Offline\",\n        client: s.client,\n        online: s.online,\n        _internal: s._internal,\n      }));\n    });\n    client.on(\"disconnect\", () => {\n      setState((s) => ({\n        status: \"Disconnecting\",\n        client: s.client,\n        online: s.online,\n        _internal: s._internal,\n      }));\n    });\n    client.on(\"message\", (topic: string, message: Buffer) => {\n      state._internal.subscriptions.forEach((subs) => {\n        if (match(subs.topic, topic)) {\n          subs.listener(topic, message);\n        }\n      });\n      state._internal.values.set(topic, message);\n    });\n\n    setState((s) => {\n      s._internal.subscriptions.length = 0;\n      s._internal.values.clear();\n      return {\n        status: \"Connecting\",\n        client,\n        online,\n        _internal: s._internal,\n      };\n    });\n  };\n\n  const subscribe = (\n    topic: string,\n    listener: (topic: string, message: Buffer) => void,\n    options?: IClientSubscribeOptions\n  ): SubscribeHandler | null => {\n    if (state.client && topic !== \"\") {\n      const handler = { topic, listener };\n      state._internal.subscriptions.push(handler);\n      if (\n        !state._internal.subscriptions.some(\n          (s) => s !== handler && s.topic === topic\n        )\n      ) {\n        state.client.subscribe(topic, options || { qos: 0 });\n      }\n      // in case message is retained, system will call two times the listener\n      Array.from(state._internal.values.entries())\n        .filter(([key]) => match(topic, key))\n        .forEach(([key, value]) => listener(key, value));\n      return handler;\n    }\n    return null;\n  };\n\n  const unsubscribe = (handler: SubscribeHandler | null) => {\n    if (state.client && handler) {\n      const inx: number = state._internal.subscriptions.findIndex(\n        (s) => s === handler\n      );\n      if (inx < 0) {\n        throw new Error(\"Not subscribed\");\n      }\n      state._internal.subscriptions.splice(inx, 1);\n      if (\n        !state._internal.subscriptions.some((s) => s.topic === handler.topic)\n      ) {\n        state.client.unsubscribe(handler.topic);\n      }\n    }\n  };\n\n  const publish = (\n    topic: string,\n    message: Buffer | string,\n    options?: IClientPublishOptions\n  ) => {\n    if (state.client?.connected) {\n      state.client.publish(topic, message, options || {});\n    } else {\n      throw new Error(\"Not connected\");\n    }\n  };\n\n  const value: MQTTContextValue = [\n    {\n      status: state.status,\n      ready: !!state.client,\n      connected: state.client?.connected || false,\n      hostname: state.client?.options?.hostname,\n    },\n    { connect, disconnect, subscribe, unsubscribe, publish },\n  ];\n  return <MQTTContext.Provider value={value}>{children}</MQTTContext.Provider>;\n};\n\nexport default MQTTProvider;\n","import { ValueFormat } from \"./FormatTypes\";\n\nexport function StrValueFormat(): ValueFormat {\n  return {\n    toDisplay: (b: Buffer) => b.toString(),\n    fromDisplay: (s: string) => Buffer.from(s),\n    className: () => \"\",\n    next: (b: Buffer) => b,\n    prev: (b: Buffer) => b,\n  };\n}\n\nexport function JSONValueFormat(): ValueFormat {\n  return {\n    toDisplay: (b: Buffer) => JSON.stringify(JSON.parse(b.toString()), null, 2),\n    className: () => \"\",\n    fromDisplay: (s: string) => Buffer.from(s),\n    next: (b: Buffer) => b,\n    prev: (b: Buffer) => b,\n  };\n}\n\nexport function HEXValueFormat(): ValueFormat {\n  return {\n    toDisplay: (b: Buffer) => b.toString(\"hex\"),\n    className: () => \"\",\n    fromDisplay: (s: string) => Buffer.from(s, \"hex\"),\n    next: (b: Buffer) => b,\n    prev: (b: Buffer) => b,\n  };\n}\n\nexport function Base64ValueFormat(): ValueFormat {\n  return {\n    toDisplay: (b: Buffer) => b.toString(\"base64\"),\n    className: () => \"\",\n    fromDisplay: (s: string) => Buffer.from(s, \"base64\"),\n    next: (b: Buffer) => b,\n    prev: (b: Buffer) => b,\n  };\n}\n\nexport function SwitchValueFormat(): ValueFormat {\n  return {\n    toDisplay: (b: Buffer) => (b.toString() === \"1\" ? \"ON\" : \"OFF\"),\n    fromDisplay: (s: string) => Buffer.from(s === \"ON\" ? \"1\" : \"0\"),\n    next: (b: Buffer) => Buffer.from(b.toString() === \"1\" ? \"0\" : \"1\"),\n    prev: (b: Buffer) => Buffer.from(b.toString() === \"1\" ? \"0\" : \"1\"),\n    className: () => \"\",\n  };\n}\n\nconst getCharClass: (s?: string) => string = (s) =>\n  s ? \"[\" + s.split(\"\").join(\"][\") + \"]\" : \"\";\n\nexport function NumberValueFormat(\n  options?: Intl.NumberFormatOptions\n): ValueFormat {\n  const locale = navigator.language;\n  const intl = new Intl.NumberFormat(locale, options);\n\n  const parts: Intl.NumberFormatPart[] = intl.formatToParts(12345.6);\n  const numerals: string[] = new Intl.NumberFormat(locale, {\n    useGrouping: false,\n  })\n    .format(9876543210)\n    .split(\"\")\n    .reverse();\n  const inx = new Map<string, string>(\n    numerals.map((d: string, i: number) => [d, i.toString()])\n  );\n  const group = new RegExp(\n    `[${parts.find((d) => d.type === \"group\")?.value}]`,\n    \"g\"\n  );\n  const decimal = new RegExp(\n    `[${parts.find((d) => d.type === \"decimal\")?.value}]`\n  );\n  const currency = new RegExp(\n    `[${parts.find((d) => d.type === \"currency\")?.value}]`\n  );\n  const unit = new RegExp(\n    getCharClass(parts.find((d) => d.type === \"unit\")?.value)\n  );\n\n  const numeral = new RegExp(`[${numerals.join(\"\")}]`, \"g\");\n  const getindex = (d: string): string => inx.get(d) || \"\";\n\n  return {\n    toDisplay: (b: Buffer) => {\n      const s = b.toString();\n      return s ? intl.format(Number(s)) : \"\";\n    },\n    fromDisplay: (s: string) => {\n      const strans = s\n        .trim()\n        .replace(group, \"\")\n        .replace(currency, \"\")\n        .replace(unit, \"\")\n        .replace(decimal, \".\")\n        .replace(numeral, getindex);\n      //we need to replace also currency and units\n\n      return Buffer.from(strans);\n    },\n    next: (b: Buffer) => Buffer.from((Number(b.toString()) + 1).toString()),\n    prev: (b: Buffer) => Buffer.from((Number(b.toString()) - 1).toString()),\n    className: () => \"myh-class_alignright\",\n  };\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorkerRegistration.register();\nreportWebVitals();\n","export const piepath: (args: {\n  cx: number;\n  cy: number;\n  r: number;\n  start: number;\n  end: number;\n  orientation?: number;\n}) => string = ({ cx, cy, r, start, end, orientation = 0 }) => {\n  return `M${cx + Math.cos(start) * r} ${\n    cy + Math.sin(start) * r\n  } A ${r} ${r} 1 ${orientation} 0 ${cx + Math.cos(end) * r} ${\n    cy + Math.sin(end) * r\n  } L ${cx} ${cy} Z`;\n};\n\nexport const arcpath: (args: {\n  cx: number;\n  cy: number;\n  r: number;\n  start: number;\n  end: number;\n  orientation?: number;\n  sweep?: number;\n}) => string = ({ cx, cy, r, start, end, orientation = 0, sweep = 0 }) => {\n  return `M${cx + Math.cos(start) * r} ${\n    cy + Math.sin(start) * r\n  } A ${r} ${r} 1 ${orientation} ${sweep} ${cx + Math.cos(end) * r} ${\n    cy + Math.sin(end) * r\n  }`;\n};\n\nexport const padvalue: (\n  min: number,\n  max: number,\n  length?: number\n) => (value: number) => number = (min, max, length = 1) => (value) => {\n  let lengthvalue = (length * (value - min)) / (max - min);\n  if (lengthvalue < 0) {\n    return 0;\n  }\n  if (lengthvalue > length) {\n    return length;\n  }\n  return lengthvalue;\n};\n","import React from \"react\";\nimport { padvalue } from \"./svgdraw\";\nimport \"./LinearGauge.css\";\n\nexport type LinearGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  labelstep?: number;\n};\n\nconst LinearGauge: React.FC<LinearGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n  step = 5,\n  labelstep = 10,\n}) => {\n  const locale = navigator.language;\n  const intl = new Intl.NumberFormat(locale);\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  let width: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    width = 0;\n    formatvalue = \"\";\n  } else {\n    width = padvalue(min, max, 160)(value);\n    formatvalue = intlvalue.format(value);\n  }\n\n  const lines = [];\n  for (let index = min; index <= max; index += step) {\n    const mark = 20 + (160 * (index - min)) / (max - min);\n    lines.push(\n      <line\n        key={`la-${index}`}\n        x1={mark}\n        y1={60}\n        x2={mark}\n        y2={63}\n        className=\"linear-indicator-mark\"\n      />\n    );\n  }\n\n  for (let index = min; index <= max; index += labelstep) {\n    const mark = 20 + (160 * (index - min)) / (max - min);\n    lines.push(\n      <line\n        key={`lb-${index}`}\n        x1={mark}\n        y1={60}\n        x2={mark}\n        y2={65}\n        className=\"linear-indicator-markstep\"\n      />\n    );\n    lines.push(\n      <text\n        key={`t-${index}`}\n        x={mark}\n        y={75}\n        textAnchor=\"middle\"\n        className=\"linear-indicator-marklabel\"\n      >\n        {intl.format(index)}\n      </text>\n    );\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 90\"\n      className={className}\n    >\n      <line\n        key=\"markstep\"\n        x1={20}\n        y1={29}\n        x2={180}\n        y2={29}\n        className=\"linear-indicator-markstep\"\n      />\n      <rect\n        key=\"background\"\n        x={20}\n        y={32}\n        width={160}\n        height={25}\n        className=\"linear-indicator-background\"\n      />\n      <rect\n        key=\"bar\"\n        x={20}\n        y={32}\n        width={width}\n        height={25}\n        className=\"linear-indicator-bar\"\n      />\n\n      <line\n        key=\"markstep2\"\n        x1={20}\n        y1={60}\n        x2={180}\n        y2={60}\n        className=\"linear-indicator-markstep\"\n      />\n      {lines}\n      <text\n        key=\"textvalue\"\n        x={180}\n        y={20}\n        textAnchor=\"end\"\n        className=\"linear-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        key=\"texttitle\"\n        x={20}\n        y={20}\n        textAnchor=\"start\"\n        className=\"linear-indicator-title\"\n      >\n        {title}\n      </text>\n    </svg>\n  );\n};\n\nexport default LinearGauge;\n","import React from \"react\";\nimport { padvalue } from \"./svgdraw\";\nimport \"./ProgressGauge.css\";\n\nexport type ProgressGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n};\n\nconst ProgressGauge: React.FC<ProgressGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n}) => {\n  const locale = navigator.language;\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  let width: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    width = 0;\n    formatvalue = \"\";\n  } else {\n    width = padvalue(min, max, 160)(value);\n    formatvalue = intlvalue.format(value);\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 30\"\n      className={className}\n    >\n      <rect\n        x={20}\n        y={16}\n        width={160}\n        height={8}\n        rx={4}\n        className=\"progress-indicator-background\"\n      />\n      <rect\n        x={20}\n        y={16}\n        width={width}\n        height={8}\n        rx={4}\n        className=\"progress-indicator-bar\"\n      />\n\n      <text\n        x={180}\n        y={12}\n        textAnchor=\"end\"\n        className=\"progress-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        x={20}\n        y={10}\n        textAnchor=\"start\"\n        className=\"progress-indicator-title\"\n      >\n        {title}\n      </text>\n    </svg>\n  );\n};\n\nexport default ProgressGauge;\n","import React from \"react\";\nimport { padvalue } from \"./svgdraw\";\nimport \"./DashboardGauge.css\";\n\nexport type DashboardGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n};\n\nconst DashboardGauge: React.FC<DashboardGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n}) => {\n  const locale = navigator.language;\n  const intl = new Intl.NumberFormat(locale);\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  const r = 60;\n\n  let arcvalue: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    arcvalue = 0;\n    formatvalue = \"\";\n  } else {\n    arcvalue = padvalue(min, max, Math.PI * r)(value);\n    formatvalue = intlvalue.format(value);\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 130\"\n      className={className}\n    >\n      <path\n        id=\"arc\"\n        d=\"M40 85 A 60 60 0 0 1 160 85\"\n        opacity=\"1\"\n        className=\"dashboard-indicator-background\"\n        style={{\n          fill: \"#00000000\",\n          strokeMiterlimit: 0,\n          strokeDasharray: \"none\",\n        }}\n      />\n      <path\n        id=\"arc\"\n        d=\"M40 85 A 60 60 0 0 1 160 85\"\n        opacity=\"1\"\n        className=\"dashboard-indicator-bar\"\n        style={{\n          fill: \"#00000000\",\n          strokeMiterlimit: 0,\n          strokeDasharray: `${arcvalue} 400`,\n        }}\n      />\n      <text\n        x={40}\n        y={97}\n        textAnchor=\"middle\"\n        className=\"dashboard-indicator-labels\"\n      >\n        {intl.format(min)}\n      </text>\n      <text\n        x={160}\n        y={97}\n        textAnchor=\"middle\"\n        className=\"dashboard-indicator-labels\"\n      >\n        {intl.format(max)}\n      </text>\n      <text\n        x={100}\n        y={90}\n        textAnchor=\"middle\"\n        className=\"dashboard-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        x={100}\n        y={110}\n        textAnchor=\"middle\"\n        className=\"dashboard-indicator-title\"\n      >\n        {title}\n      </text>\n    </svg>\n  );\n};\n\nexport default DashboardGauge;\n","import React from \"react\";\nimport { piepath, padvalue } from \"./svgdraw\";\nimport \"./SimpleGauge.css\";\n\nexport type SimpleGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n};\n\nconst SimpleGauge: React.FC<SimpleGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n}) => {\n  const locale = navigator.language;\n  const intl = new Intl.NumberFormat(locale);\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  const r1 = 55;\n  const sinr2 = Math.sin(Math.PI / 12);\n  const cosr2 = Math.cos(Math.PI / 12);\n  const r2 = 25;\n  const centerx = 100;\n  const centery = 65;\n\n  let angle: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    angle = 0;\n    formatvalue = \"\";\n  } else {\n    angle = padvalue(min, max, 270)(value);\n    formatvalue = intlvalue.format(value);\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 130\"\n      className={className}\n    >\n      <path\n        id=\"pie1\"\n        d={piepath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (181 * Math.PI) / 180,\n          end: (135 * Math.PI) / 180,\n        })}\n        className=\"simple-indicator-pie\"\n        style={{\n          filter: \"brightness(0.50)\",\n        }}\n      />\n      <path\n        id=\"pie2\"\n        d={piepath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (226 * Math.PI) / 180,\n          end: (180 * Math.PI) / 180,\n        })}\n        className=\"simple-indicator-pie\"\n        style={{\n          filter: \"brightness(0.60)\",\n        }}\n      />\n      <path\n        id=\"pie3\"\n        d={piepath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (271 * Math.PI) / 180,\n          end: (225 * Math.PI) / 180,\n        })}\n        className=\"simple-indicator-pie\"\n        style={{\n          filter: \"brightness(0.70)\",\n        }}\n      />\n      <path\n        id=\"pie4\"\n        d={piepath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (316 * Math.PI) / 180,\n          end: (270 * Math.PI) / 180,\n        })}\n        className=\"simple-indicator-pie\"\n        style={{\n          filter: \"brightness(0.80)\",\n        }}\n      />\n      <path\n        id=\"pie5\"\n        d={piepath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (361 * Math.PI) / 180,\n          end: (315 * Math.PI) / 180,\n        })}\n        className=\"simple-indicator-pie\"\n        style={{\n          filter: \"brightness(0.90)\",\n        }}\n      />\n      <path\n        id=\"pie6\"\n        d={piepath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (46 * Math.PI) / 180,\n          end: (0 * Math.PI) / 180,\n        })}\n        className=\"simple-indicator-pie\"\n        style={{\n          filter: \"brightness(1)\",\n        }}\n      />\n\n      <path\n        id=\"arc\"\n        d={piepath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (45 * Math.PI) / 180,\n          end: (135 * Math.PI) / 180,\n          orientation: 1,\n        })}\n        className=\"simple-indicator-mark\"\n        style={{ fill: \"#00000000\" }}\n      />\n\n      <text\n        x={50}\n        y={115}\n        textAnchor=\"middle\"\n        className=\"simple-indicator-labels\"\n      >\n        {intl.format(min)}\n      </text>\n      <text\n        x={150}\n        y={115}\n        textAnchor=\"middle\"\n        className=\"simple-indicator-labels\"\n      >\n        {intl.format(max)}\n      </text>\n\n      <path\n        id=\"arcindicator\"\n        d={`M${centerx - sinr2 * r2} ${\n          centery - cosr2 * r2\n        } A ${r2} ${r2} 0 1 0 ${centerx + sinr2 * r2} ${\n          centery - cosr2 * r2\n        } L ${centerx} ${centery - 45} Z`}\n        opacity=\"1\"\n        className=\"simple-indicator-arrow\"\n        style={{\n          transform: `translate(${centerx}px, ${centery}px) rotate(${\n            angle - 135\n          }deg) translate(${-centerx}px, ${-centery}px)`,\n        }}\n      />\n      <text\n        x={centerx}\n        y={centery + 5}\n        textAnchor=\"middle\"\n        className=\"simple-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        x={100}\n        y={110}\n        textAnchor=\"middle\"\n        className=\"simple-indicator-title\"\n      >\n        {title}\n      </text>\n    </svg>\n  );\n};\n\nexport default SimpleGauge;\n","import React from \"react\";\nimport { padvalue } from \"./svgdraw\";\nimport \"./CircularGauge.css\";\n\nexport type CircularGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nconst CircularGauge: React.FC<CircularGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n}) => {\n  const locale = navigator.language;\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  const r1 = 55;\n  const centerx = 100;\n  const centery = 65;\n\n  let arcvalue: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    arcvalue = 0;\n    formatvalue = \"\";\n  } else {\n    arcvalue = padvalue(min, max, Math.PI * r1 * 2)(value);\n    formatvalue = intlvalue.format(value);\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 130\"\n      className={className}\n    >\n      <circle\n        cx={centerx}\n        cy={centery}\n        r={r1}\n        className=\"circular-indicator-background\"\n        style={{\n          fill: \"#00000000\",\n          strokeMiterlimit: 0,\n        }}\n      />\n      <circle\n        cx={centerx}\n        cy={centery}\n        r={r1}\n        className=\"circular-indicator-bar\"\n        style={{\n          fill: \"#00000000\",\n          strokeMiterlimit: 0,\n          strokeDasharray: `${arcvalue} 400`,\n          transform: `translate(${centerx}px, ${centery}px) rotate(-90deg) translate(${-centerx}px, ${-centery}px)`,\n        }}\n      />\n      <text\n        x={100}\n        y={65}\n        textAnchor=\"middle\"\n        className=\"circular-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        x={100}\n        y={85}\n        textAnchor=\"middle\"\n        className=\"circular-indicator-title\"\n      >\n        {title}\n      </text>\n    </svg>\n  );\n};\n\nexport default CircularGauge;\n","import React from \"react\";\nimport { arcpath, padvalue } from \"./svgdraw\";\nimport \"./MetroGauge.css\";\n\nexport type MetroGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  labelstep?: number;\n};\n\nconst MetroGauge: React.FC<MetroGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n  step = 2,\n  labelstep = 5,\n}) => {\n  const locale = navigator.language;\n  const intl = new Intl.NumberFormat(locale);\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  const r1 = 55;\n  const centerx = 100;\n  const centery = 65;\n  const arctotal = 270;\n\n  let arcvalue: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    arcvalue = 0;\n    formatvalue = \"\";\n  } else {\n    arcvalue = padvalue(min, max, arctotal)(value);\n    formatvalue = intlvalue.format(value);\n  }\n  arcvalue -= 135;\n\n  const lines = [];\n  for (let index = min; index <= max; index += step) {\n    const angle = 135 + (arctotal * (index - min)) / (max - min);\n    const cos = Math.cos((angle * Math.PI) / 180);\n    const sin = Math.sin((angle * Math.PI) / 180);\n    lines.push(\n      <line\n        key={`la-${index}`}\n        x1={centerx + r1 * cos}\n        y1={centery + r1 * sin}\n        x2={centerx + (r1 - 3) * cos}\n        y2={centery + (r1 - 3) * sin}\n        className=\"metro-indicator-mark\"\n      />\n    );\n  }\n  for (let index = min; index <= max; index += labelstep) {\n    const angle = 135 + (arctotal * (index - min)) / (max - min);\n    const cos = Math.cos((angle * Math.PI) / 180);\n    const sin = Math.sin((angle * Math.PI) / 180);\n    lines.push(\n      <line\n        key={`lb-${index}`}\n        x1={centerx + r1 * cos}\n        y1={centery + r1 * sin}\n        x2={centerx + (r1 - 6) * cos}\n        y2={centery + (r1 - 6) * sin}\n        className=\"metro-indicator-markstep\"\n      />\n    );\n    lines.push(\n      <text\n        key={`t-${index}`}\n        x={centerx + (r1 - 13) * cos}\n        y={centery + 2 + (r1 - 13) * sin}\n        textAnchor=\"middle\"\n        className=\"metro-indicator-marklabel\"\n      >\n        {intl.format(index)}\n      </text>\n    );\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 130\"\n      className={className}\n    >\n      {lines}\n      <path\n        id=\"arc\"\n        d={arcpath({\n          cx: centerx,\n          cy: centery,\n          r: r1 + 2,\n          start: (45 * Math.PI) / 180,\n          end: (135 * Math.PI) / 180,\n          orientation: 1,\n        })}\n        className=\"metro-indicator-mark\"\n        style={{ fill: \"#00000000\" }}\n      />\n      <text\n        x={100}\n        y={85}\n        textAnchor=\"middle\"\n        className=\"metro-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        x={centerx}\n        y={55}\n        textAnchor=\"middle\"\n        className=\"metro-indicator-title\"\n      >\n        {title}\n      </text>\n      <path\n        d=\"M 3 10 L -3 10 L 0 -50 Z\"\n        className=\"metro-indicator-arrow\"\n        style={{\n          transform: `translate(${centerx}px, ${centery}px) rotate(${arcvalue}deg)`,\n        }}\n      />\n      <circle\n        cx={centerx}\n        cy={centery}\n        r={1.2}\n        className=\"metro-indicator-arrowpin\"\n      />\n    </svg>\n  );\n};\n\nexport default MetroGauge;\n","import React from \"react\";\nimport { padvalue, arcpath } from \"./svgdraw\";\nimport \"./SpaceGauge.css\";\n\nexport type SpaceGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nconst SpaceGauge: React.FC<SpaceGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n}) => {\n  const locale = navigator.language;\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  const r1 = 50;\n  const centerx = 100;\n  const centery = 65;\n\n  let arcvalue: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    arcvalue = 0;\n    formatvalue = \"\";\n  } else {\n    arcvalue = padvalue(min, max, (Math.PI * r1 * 2 * 3) / 4)(value);\n    formatvalue = intlvalue.format(value);\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 130\"\n      className={className}\n    >\n      <path\n        id=\"path1\"\n        d={arcpath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (90 * Math.PI) / 180,\n          end: (0 * Math.PI) / 180,\n          orientation: 1,\n          sweep: 1,\n        })}\n        className=\"space-indicator-background\"\n        style={{\n          fill: \"#00000000\",\n        }}\n      />\n      <path\n        id=\"path2\"\n        d={arcpath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (90 * Math.PI) / 180,\n          end: (0 * Math.PI) / 180,\n          orientation: 1,\n          sweep: 1,\n        })}\n        className=\"space-indicator-bar\"\n        style={{\n          strokeDasharray: `${arcvalue} 400`,\n          fill: \"#00000000\",\n        }}\n      />\n\n      <text\n        x={105}\n        y={105}\n        textAnchor=\"start\"\n        className=\"space-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text x={105} y={80} textAnchor=\"start\" className=\"space-indicator-title\">\n        {title}\n      </text>\n    </svg>\n  );\n};\n\nexport default SpaceGauge;\n","import React from \"react\";\nimport { padvalue } from \"./svgdraw\";\nimport \"./LiquidGauge.css\";\n\nexport type LiquidGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n};\n\nconst LiquidGauge: React.FC<LiquidGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n}) => {\n  const locale = navigator.language;\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  const r1 = 55;\n  const r2 = 52;\n  const centerx = 100;\n  const centery = 65;\n\n  let yvalue: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    yvalue = 0;\n    formatvalue = \"\";\n  } else {\n    yvalue = padvalue(min, max, r2 * 2)(value);\n    formatvalue = intlvalue.format(value);\n  }\n\n  yvalue = centery + r2 - yvalue;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 130\"\n      className={className}\n    >\n      <defs>\n        <clipPath id=\"cut-off-bottom\">\n          <rect\n            className=\"liquid-indicator-bar\"\n            x={0}\n            y={yvalue}\n            width={200}\n            height={130}\n          />\n        </clipPath>\n      </defs>\n      <circle\n        cx={centerx}\n        cy={centery}\n        r={r1}\n        className=\"liquid-indicator-border\"\n        style={{ fill: \"#00000000\" }}\n      />\n\n      <text\n        id=\"value1\"\n        x={100}\n        y={65}\n        textAnchor=\"middle\"\n        className=\"liquid-indicator-value liquid-indicator-value_1\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        id=\"title1\"\n        x={100}\n        y={85}\n        textAnchor=\"middle\"\n        className=\"liquid-indicator-title liquid-indicator-title_1\"\n      >\n        {title}\n      </text>\n\n      <circle\n        cx={centerx}\n        cy={centery}\n        r={r2}\n        className=\"liquid-indicator-background\"\n        clipPath=\"url(#cut-off-bottom)\"\n      />\n\n      <text\n        id=\"value2\"\n        x={100}\n        y={65}\n        textAnchor=\"middle\"\n        className=\"liquid-indicator-value liquid-indicator-value_2\"\n        clipPath=\"url(#cut-off-bottom)\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        id=\"title2\"\n        x={100}\n        y={85}\n        textAnchor=\"middle\"\n        className=\"liquid-indicator-title liquid-indicator-title_2\"\n        clipPath=\"url(#cut-off-bottom)\"\n      >\n        {title}\n      </text>\n    </svg>\n  );\n};\n\nexport default LiquidGauge;\n","import React from \"react\";\nimport { padvalue } from \"./svgdraw\";\nimport \"./DialGauge.css\";\n\nexport type DialGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  min?: number;\n  max?: number;\n  step?: number;\n  labelstep?: number;\n};\n\nconst DialGauge: React.FC<DialGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n  step = 5,\n  labelstep = 10,\n}) => {\n  const locale = navigator.language;\n  const intl = new Intl.NumberFormat(locale);\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  let width: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    width = 0;\n    formatvalue = \"\";\n  } else {\n    width = padvalue(min, max, 160)(value);\n    formatvalue = intlvalue.format(value);\n  }\n\n  const lines = [];\n  for (let index = min; index <= max; index += step) {\n    const mark = 20 + (160 * (index - min)) / (max - min);\n    lines.push(\n      <line\n        key={`la-${index}`}\n        x1={mark}\n        y1={36}\n        x2={mark}\n        y2={54}\n        className=\"dial-indicator-mark\"\n      />\n    );\n  }\n\n  for (let index = min; index <= max; index += labelstep) {\n    const mark = 20 + (160 * (index - min)) / (max - min);\n    lines.push(\n      <line\n        key={`lb-${index}`}\n        x1={mark}\n        y1={30}\n        x2={mark}\n        y2={60}\n        className=\"dial-indicator-markstep\"\n      />\n    );\n    lines.push(\n      <text\n        key={`t-${index}`}\n        x={mark}\n        y={70}\n        textAnchor=\"middle\"\n        className=\"dial-indicator-marklabel\"\n      >\n        {intl.format(index)}\n      </text>\n    );\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 90\"\n      className={className}\n    >\n      <rect\n        x={20}\n        y={42}\n        width={160}\n        height={6}\n        className=\"dial-indicator-background\"\n      />\n      {lines}\n      <rect\n        x={20}\n        y={42}\n        width={width}\n        height={6}\n        className=\"dial-indicator-bar\"\n      />\n      <text x={180} y={20} textAnchor=\"end\" className=\"dial-indicator-value\">\n        {formatvalue}\n      </text>\n      <text x={20} y={20} textAnchor=\"start\" className=\"dial-indicator-title\">\n        {title}\n      </text>\n    </svg>\n  );\n};\n\nexport default DialGauge;\n","import React from \"react\";\nimport { arcpath, padvalue } from \"./svgdraw\";\nimport \"./FuelGauge.css\";\n\nexport type FuelGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  labelstep?: number;\n  min?: number;\n  max?: number;\n  step?: number;\n  startangle?: number;\n  endangle?: number;\n};\n\nconst FuelGauge: React.FC<FuelGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n  step = 2,\n  labelstep = 5,\n  startangle = 200,\n  endangle = 340,\n}) => {\n  const locale = navigator.language;\n  const intl = new Intl.NumberFormat(locale);\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  const r1 = 55;\n  const r2 = 50;\n  const centerx = 100;\n  const centery = 80;\n\n  const arctotal = endangle - startangle;\n\n  let arcvalue: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    arcvalue = 0;\n    formatvalue = \"\";\n  } else {\n    arcvalue = padvalue(min, max, arctotal)(value);\n    formatvalue = intlvalue.format(value);\n  }\n  arcvalue += startangle - 270;\n\n  const lines = [];\n  for (let index = min; index <= max; index += step) {\n    const angle = startangle - 360 + (arctotal * (index - min)) / (max - min);\n    const cos = Math.cos((angle * Math.PI) / 180);\n    const sin = Math.sin((angle * Math.PI) / 180);\n    lines.push(\n      <line\n        key={`ma-${index}`}\n        x1={centerx + r1 * cos}\n        y1={centery + r1 * sin}\n        x2={centerx + (r1 - 5) * cos}\n        y2={centery + (r1 - 5) * sin}\n        className=\"fuel-indicator-markstep\"\n      />\n    );\n  }\n  for (let index = min; index <= max; index += labelstep) {\n    const angle = startangle - 360 + (arctotal * (index - min)) / (max - min);\n    const cos = Math.cos((angle * Math.PI) / 180);\n    const sin = Math.sin((angle * Math.PI) / 180);\n    lines.push(\n      <line\n        key={`mb-${index}`}\n        x1={centerx + r1 * cos}\n        y1={centery + r1 * sin}\n        x2={centerx + (r1 - 8) * cos}\n        y2={centery + (r1 - 8) * sin}\n        className=\"fuel-indicator-markstep\"\n      />\n    );\n    lines.push(\n      <text\n        key={`t-${index}`}\n        x={centerx + (r1 - 16) * cos}\n        y={centery + 2 + (r1 - 16) * sin}\n        textAnchor=\"middle\"\n        className=\"fuel-indicator-marklabel\"\n      >\n        {intl.format(index)}\n      </text>\n    );\n  }\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 130\"\n      className={className}\n    >\n      {lines}\n      <path\n        id=\"arc\"\n        d={arcpath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (startangle * Math.PI) / 180,\n          end: (endangle * Math.PI) / 180,\n          orientation: 0,\n          sweep: 1,\n        })}\n        className=\"fuel-indicator-mark fuel-indicator-mark_ext\"\n        style={{ fill: \"#00000000\" }}\n      />\n      <path\n        id=\"arc\"\n        d={arcpath({\n          cx: centerx,\n          cy: centery,\n          r: r2,\n          start: (startangle * Math.PI) / 180,\n          end: (endangle * Math.PI) / 180,\n          orientation: 0,\n          sweep: 1,\n        })}\n        className=\"fuel-indicator-mark fuel-indicator-mark_int\"\n        style={{ fill: \"#00000000\" }}\n      />\n      <text\n        x={100}\n        y={105}\n        textAnchor=\"middle\"\n        className=\"fuel-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        x={centerx}\n        y={15}\n        textAnchor=\"middle\"\n        className=\"fuel-indicator-title\"\n      >\n        {title}\n      </text>\n      <path\n        d=\"M 1.5 0  L -1.5 0 L -1 -42 L 0 -45 L 1 -42  Z\"\n        className=\"fuel-indicator-arrow\"\n        style={{\n          transform: `translate(${centerx}px, ${centery}px) rotate(${arcvalue}deg)`,\n        }}\n      />\n      <circle\n        cx={centerx}\n        cy={centery}\n        r={4}\n        className=\"fuel-indicator-arrowpin\"\n      />\n    </svg>\n  );\n};\n\nexport default FuelGauge;\n","import React from \"react\";\nimport { arcpath, padvalue } from \"./svgdraw\";\nimport \"./ControlGauge.css\";\n\nexport type ControlGaugeProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n  title?: string;\n  className?: string;\n  labelstep?: number;\n  min?: number;\n  max?: number;\n  step?: number;\n  startangle?: number;\n  endangle?: number;\n};\n\nconst ControlGauge: React.FC<ControlGaugeProps> = ({\n  value,\n  valueformat,\n  title = \"\",\n  className = \"\",\n  min = 0,\n  max = 100,\n  startangle = 180,\n  endangle = 360,\n}) => {\n  const locale = navigator.language;\n  const intlvalue = new Intl.NumberFormat(locale, valueformat);\n\n  const r1 = 45;\n  const centerx = 100;\n  const centery = 80;\n\n  const arctotal = endangle - startangle;\n  const arctotalrad = (Math.PI * r1 * arctotal) / 180;\n\n  let arcvalue: number;\n  let arcvaluerad: number;\n  let formatvalue: string;\n  if (typeof value === \"undefined\" || isNaN(value)) {\n    arcvalue = 0;\n    arcvaluerad = 0;\n    formatvalue = \"\";\n  } else {\n    arcvalue = padvalue(min, max, arctotal)(value);\n    arcvaluerad = padvalue(min, max, arctotalrad)(value);\n    formatvalue = intlvalue.format(value);\n  }\n  arcvalue += startangle - 270;\n\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      version=\"1.1\"\n      viewBox=\"0 0 200 130\"\n      className={className}\n    >\n      <path\n        id=\"arc\"\n        d={arcpath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (startangle * Math.PI) / 180,\n          end: (endangle * Math.PI) / 180,\n          orientation: 0,\n          sweep: 1,\n        })}\n        className=\"control-indicator-background\"\n        style={{\n          fill: \"#00000000\",\n          strokeMiterlimit: 0,\n        }}\n      />\n      <path\n        id=\"arc2\"\n        d={arcpath({\n          cx: centerx,\n          cy: centery,\n          r: r1,\n          start: (startangle * Math.PI) / 180,\n          end: (endangle * Math.PI) / 180,\n          orientation: 0,\n          sweep: 1,\n        })}\n        className=\"control-indicator-bar\"\n        style={{\n          fill: \"#00000000\",\n          strokeMiterlimit: 0,\n          strokeDasharray: `${arcvaluerad} 400`,\n        }}\n      />\n      <text\n        x={100}\n        y={105}\n        textAnchor=\"middle\"\n        className=\"control-indicator-value\"\n      >\n        {formatvalue}\n      </text>\n      <text\n        x={centerx}\n        y={15}\n        textAnchor=\"middle\"\n        className=\"control-indicator-title\"\n      >\n        {title}\n      </text>\n      <path\n        // d=\"M 1 10 L -1 10  L -1 -55 L 0 -60 L 1 -55 Z\"\n        d=\"M 5 5 L 0 10 L -5 5 L 0 -65  Z\"\n        className=\"control-indicator-arrow\"\n        style={{\n          transform: `translate(${centerx}px, ${centery}px) rotate(${arcvalue}deg)`,\n        }}\n      />\n    </svg>\n  );\n};\n\nexport default ControlGauge;\n","import React from \"react\";\nimport { IconFormat, NumberValidation } from \"./FormatTypes\";\nimport LinearGauge from \"../gauge/LinearGauge\";\nimport ProgressGauge from \"../gauge/ProgressGauge\";\nimport DashboardGauge from \"../gauge/DashboardGauge\";\nimport SimpleGauge from \"../gauge/SimpleGauge\";\nimport CircularGauge from \"../gauge/CircularGauge\";\nimport MetroGauge from \"../gauge/MetroGauge\";\nimport SpaceGauge from \"../gauge/SpaceGauge\";\nimport LiquidGauge from \"../gauge/LiquidGauge\";\nimport DialGauge from \"../gauge/DialGauge\";\nimport FuelGauge from \"../gauge/FuelGauge\";\nimport ControlGauge from \"../gauge/ControlGauge\";\n\nexport type GaugeProps = {\n  title?: string;\n  className?: string;\n  labelstep?: number;\n} & NumberValidation;\n\ntype FGaugesIconFormat = (\n  gaugeprops: GaugeProps,\n  valueformat?: Intl.NumberFormatOptions\n) => IconFormat;\n\nexport type GaugeComponentProps = {\n  value?: number;\n  valueformat?: Intl.NumberFormatOptions;\n} & GaugeProps;\n\nfunction CreateGaugesIconFormat(\n  Component: React.FC<GaugeComponentProps>\n): FGaugesIconFormat {\n  return (gaugeprops: GaugeProps, valueformat?: Intl.NumberFormatOptions) => ({\n    toIcon: (buffer) => (\n      <Component\n        value={readNumber(buffer)}\n        valueformat={valueformat}\n        {...gaugeprops}\n      />\n    ),\n  });\n}\n\nfunction readNumber(buffer: Buffer): number | undefined {\n  const s: string = buffer.toString();\n  return s ? Number(s) : undefined;\n}\n\nexport const FuelIconFormat = CreateGaugesIconFormat(FuelGauge);\nexport const ControlIconFormat = CreateGaugesIconFormat(ControlGauge);\nexport const LinearIconFormat = CreateGaugesIconFormat(LinearGauge);\nexport const ProgressIconFormat = CreateGaugesIconFormat(ProgressGauge);\nexport const DashboardIconFormat = CreateGaugesIconFormat(DashboardGauge);\nexport const SimpleIconFormat = CreateGaugesIconFormat(SimpleGauge);\nexport const CircularIconFormat = CreateGaugesIconFormat(CircularGauge);\nexport const MetroIconFormat = CreateGaugesIconFormat(MetroGauge);\nexport const LiquidIconFormat = CreateGaugesIconFormat(LiquidGauge);\nexport const DialIconFormat = CreateGaugesIconFormat(DialGauge);\nexport const SpaceIconFormat = CreateGaugesIconFormat(SpaceGauge);\n","import React from \"react\";\n\nimport {\n  BulbTwoTone,\n  BulbFilled,\n  ThunderboltFilled,\n  ThunderboltTwoTone,\n  StarFilled,\n  StarTwoTone,\n} from \"@ant-design/icons\";\nimport { IconFormat, IconValueFormat, ValueFormat } from \"./FormatTypes\";\nimport {\n  NumberValueFormat,\n  StrValueFormat,\n  SwitchValueFormat,\n} from \"./ValueFormat\";\n\nexport function BulbIconFormat(): IconFormat {\n  return {\n    toIcon: (b: Buffer) =>\n      b.toString() === \"1\" ? (\n        <BulbFilled style={{ fontSize: \"180%\", color: \"yellow\" }} />\n      ) : (\n        <BulbTwoTone style={{ fontSize: \"180%\" }} twoToneColor=\"lightgray\" />\n      ),\n  };\n}\n\nexport function StarIconFormat(): IconFormat {\n  return {\n    toIcon: (b: Buffer) =>\n      b.toString() === \"1\" ? (\n        <StarFilled style={{ fontSize: \"180%\", color: \"yellow\" }} />\n      ) : (\n        <StarTwoTone style={{ fontSize: \"180%\" }} twoToneColor=\"lightgray\" />\n      ),\n  };\n}\n\nexport function ThuderboltIconFormat(): IconFormat {\n  return {\n    toIcon: (b: Buffer) =>\n      b.toString() === \"1\" ? (\n        <ThunderboltFilled style={{ fontSize: \"180%\", color: \"yellow\" }} />\n      ) : (\n        <ThunderboltTwoTone\n          style={{ fontSize: \"180%\" }}\n          twoToneColor=\"lightgray\"\n        />\n      ),\n  };\n}\n\nexport function ToIconFormat(format: ValueFormat): IconFormat {\n  return {\n    toIcon: (b: Buffer) => (\n      <div className={`myh-value myh-value-padding ${format.className()}`}>\n        {format.toDisplay(b) || \"\\u00A0\"}\n      </div>\n    ),\n  };\n}\n\nexport function ToIconValueFormat(\n  valueformat: ValueFormat,\n  iconformat: IconFormat = ToIconFormat(valueformat)\n): IconValueFormat {\n  return {\n    ...valueformat,\n    ...iconformat,\n  };\n}\n\nexport function SwitchIconValueFormat(\n  iconformat: IconFormat = StrIconFormat()\n): IconValueFormat {\n  return ToIconValueFormat(SwitchValueFormat(), iconformat);\n}\n\nexport function LabelIconFormat(format: ValueFormat): IconFormat {\n  return {\n    toIcon: (b: Buffer) => format.toDisplay(b) || \"\\u00A0\",\n  };\n}\n\nexport function LabelIconValueFormat(format: ValueFormat): IconValueFormat {\n  return ToIconValueFormat(format, LabelIconFormat(format));\n}\n\nexport function StrIconFormat(): IconFormat {\n  return ToIconFormat(StrValueFormat());\n}\n\nexport function StrIconValueFormat(): IconValueFormat {\n  return ToIconValueFormat(StrValueFormat());\n}\n\nexport function NumberIconFormat(\n  options?: Intl.NumberFormatOptions\n): IconFormat {\n  return ToIconFormat(NumberValueFormat(options));\n}\n","import React from \"react\";\nimport { Layout } from \"antd\";\n\nconst AppHeader: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  return (\n    <Layout.Header className=\"myhAppHeader\">\n      <div className=\"myhAppHeader-container\">\n        <span className=\"myhAppHeader-title\">MYHELLOIOT</span>\n        {children}\n      </div>\n    </Layout.Header>\n  );\n};\nexport default AppHeader;\n","import React from \"react\";\nimport { DownloadOutlined, UploadOutlined } from \"@ant-design/icons\";\nimport { Upload, Button, Input, Col, Row, Space } from \"antd\";\nimport { RcFile } from \"antd/lib/upload/interface\";\nimport \"./UploadRaw.css\";\n\nexport type FileInfo = {\n  name: string;\n  type: string;\n  data: string;\n};\n\nexport type UploadRawProps = {\n  accept: string;\n  value?: FileInfo;\n  className?: string;\n  onChange?: (v?: FileInfo) => void;\n};\n\nconst UploadRaw: React.FC<UploadRawProps> = ({\n  accept,\n  value,\n  onChange,\n  className,\n}) => {\n  const handleUpload = (file: RcFile): boolean => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onloadend = function () {\n      const urldata = reader.result as string;\n      if (urldata === \"data:\") {\n        onChange?.({\n          name: file.name,\n          type: file.type,\n          data: \"\",\n        });\n      } else {\n        fetch(urldata)\n          .then((response) => response.text())\n          .then((data) =>\n            onChange?.({\n              name: file.name,\n              type: file.type,\n              data,\n            })\n          );\n      }\n    };\n    return false;\n  };\n\n  const download = () => {\n    if (!value) {\n      throw new Error(\"Cannot download empty value.\");\n    }\n\n    const dataurl = `data:${value.type || \"text/plain\"};base64,${btoa(\n      value.data\n    )}`;\n    const a = document.createElement(\"a\");\n    a.href = dataurl;\n    a.download = value.name;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n  };\n\n  return (\n    <Row gutter={[8, 8]} className={className}>\n      <Col span={24}>\n        <Space>\n          <span>Name:</span>\n          <Input\n            className=\"myhUploadRaw-name\"\n            onChange={(e) =>\n              onChange?.({\n                name: e.target.value,\n                type: value?.type || \"\",\n                data: value?.data || \"\",\n              })\n            }\n            value={value?.name || \"\"}\n          />\n          <Upload\n            accept={accept}\n            multiple={false}\n            fileList={[]}\n            beforeUpload={handleUpload}\n            maxCount={1}\n          >\n            <Button icon={<UploadOutlined />}>Upload</Button>\n          </Upload>\n          <Button\n            icon={<DownloadOutlined />}\n            onClick={download}\n            disabled={!value?.name}\n          >\n            Download\n          </Button>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Input.TextArea\n          className=\"myhUploadRaw-data\"\n          onChange={(e) =>\n            onChange?.({\n              name: value?.name || \"\",\n              type: value?.type || \"\",\n              data: e.target.value,\n            })\n          }\n          value={value?.data || \"\"}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nexport default UploadRaw;\n","import React, { useEffect } from \"react\";\nimport {\n  Form,\n  Input,\n  InputNumber,\n  Button,\n  Row,\n  Col,\n  Radio,\n  Layout,\n  Tabs,\n} from \"antd\";\nimport AppHeader from \"../AppHeader\";\nimport { ConnectInfo } from \"./ConnectionInfo\";\nimport \"./ContentConnect.css\";\nimport { useAppContext } from \"../App\";\nimport UploadRaw from \"./UploadRaw\";\n\nconst PanelConnect: React.FC<{}> = () => {\n  const [form] = Form.useForm<ConnectInfo>();\n  const { setConnected } = useAppContext();\n  const { TabPane } = Tabs;\n\n  useEffect(() => {\n    const item = localStorage.getItem(\"mqttconnect\");\n    if (item) {\n      form.setFieldsValue(JSON.parse(item));\n    } else {\n      form.setFieldsValue({\n        url: \"ws://localhost:9001\",\n        username: \"\",\n        password: \"\",\n        clientId:\n          \"myhelloiot_\" + Math.random().toString(16).substr(2).padEnd(13, \"0\"),\n        keepalive: 60,\n        connectTimeout: 30000,\n        reconnectPeriod: 1000,\n        onlinetopic: \"\",\n        onlineqos: 0,\n        dashboard: { name: \"dashboard.jsx\", type: \"text/jsx\", data: \"\" },\n        dashboardcss: { name: \"dashboard.css\", type: \"text/css\", data: \"\" },\n      });\n    }\n    window.scrollTo(0, 0);\n  });\n\n  const handleConnect = (connectinfo: ConnectInfo) => {\n    localStorage.setItem(\"mqttconnect\", JSON.stringify(connectinfo));\n    setConnected(\"connected\");\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"connection\"\n      onFinish={handleConnect}\n      className=\"myhConnectionForm\"\n    >\n      <Layout>\n        <AppHeader>\n          <div className=\"myhMenuDisplayButton\"></div>\n          <Button type=\"primary\" htmlType=\"submit\">\n            Connect\n          </Button>\n        </AppHeader>\n        <Layout.Content className=\"myhMainLayout\">\n          <div className=\"myhAppContent-panel\">\n            <Tabs defaultActiveKey=\"1\">\n              <TabPane tab=\"MQTT connection\" key=\"1\" forceRender>\n                <Row gutter={[8, { xs: 2, sm: 2, md: 8, lg: 8 }]}>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                  <Col\n                    xs={24}\n                    sm={6}\n                    md={6}\n                    lg={4}\n                    className=\"ant-form-item-label\"\n                  >\n                    <label\n                      htmlFor=\"url\"\n                      className=\"ant-form-item-required\"\n                      title=\"URL\"\n                    >\n                      URL\n                    </label>\n                  </Col>\n                  <Col xs={24} sm={18} md={18} lg={12}>\n                    <Form.Item\n                      name=\"url\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please input the url of the MQTT broker.\",\n                        },\n                      ]}\n                    >\n                      <Input autoComplete=\"off\" />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                  <Col\n                    xs={24}\n                    sm={6}\n                    md={6}\n                    lg={4}\n                    className=\"ant-form-item-label\"\n                  >\n                    <label htmlFor=\"username\" title=\"User\">\n                      User\n                    </label>\n                  </Col>\n                  <Col xs={24} sm={18} md={6} lg={4}>\n                    <Form.Item name=\"username\">\n                      <Input autoComplete=\"off\" />\n                    </Form.Item>\n                  </Col>\n                  <Col\n                    xs={24}\n                    sm={6}\n                    md={6}\n                    lg={4}\n                    className=\"ant-form-item-label\"\n                  >\n                    <label htmlFor=\"password\" title=\"Password\">\n                      Password\n                    </label>\n                  </Col>\n                  <Col xs={24} sm={18} md={6} lg={4}>\n                    <Form.Item name=\"password\">\n                      <Input.Password />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                  <Col\n                    xs={24}\n                    sm={6}\n                    md={6}\n                    lg={4}\n                    className=\"ant-form-item-label\"\n                  >\n                    <label\n                      htmlFor=\"clientId\"\n                      className=\"ant-form-item-required\"\n                      title=\"Client ID\"\n                    >\n                      Client ID\n                    </label>\n                  </Col>\n                  <Col xs={24} sm={18} md={6} lg={4}>\n                    <Form.Item\n                      name=\"clientId\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please define a Client ID.\",\n                        },\n                      ]}\n                    >\n                      <Input autoComplete=\"off\" />\n                    </Form.Item>\n                  </Col>\n                  <Col\n                    xs={24}\n                    sm={6}\n                    md={6}\n                    lg={4}\n                    className=\"ant-form-item-label\"\n                  >\n                    <label\n                      htmlFor=\"keepalive\"\n                      className=\"ant-form-item-required\"\n                      title=\"Keep alive\"\n                    >\n                      Keep alive\n                    </label>\n                  </Col>\n                  <Col xs={24} sm={18} md={6} lg={4}>\n                    <Form.Item\n                      name=\"keepalive\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please define a Keep alive value.\",\n                        },\n                      ]}\n                    >\n                      <InputNumber autoComplete=\"off\" />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                  <Col\n                    xs={24}\n                    sm={6}\n                    md={6}\n                    lg={4}\n                    className=\"ant-form-item-label\"\n                  >\n                    <label\n                      htmlFor=\"connectTimeout\"\n                      className=\"ant-form-item-required\"\n                      title=\"Connection timeout\"\n                    >\n                      Connection timeout\n                    </label>\n                  </Col>\n                  <Col xs={24} sm={18} md={6} lg={4}>\n                    <Form.Item\n                      name=\"connectTimeout\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please define a Connection timeout value.\",\n                        },\n                      ]}\n                    >\n                      <InputNumber autoComplete=\"off\" />\n                    </Form.Item>\n                  </Col>\n                  <Col\n                    xs={24}\n                    sm={6}\n                    md={6}\n                    lg={4}\n                    className=\"ant-form-item-label\"\n                  >\n                    <label\n                      htmlFor=\"reconnectPeriod\"\n                      className=\"ant-form-item-required\"\n                      title=\"Reconnect period\"\n                    >\n                      Reconnect period\n                    </label>\n                  </Col>\n                  <Col xs={24} sm={18} md={6} lg={4}>\n                    <Form.Item\n                      name=\"reconnectPeriod\"\n                      rules={[\n                        {\n                          required: true,\n                          message: \"Please define a Reconnect period value.\",\n                        },\n                      ]}\n                    >\n                      <InputNumber autoComplete=\"off\" />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                  <Col\n                    xs={24}\n                    sm={6}\n                    md={6}\n                    lg={4}\n                    className=\"ant-form-item-label\"\n                  >\n                    <label htmlFor=\"onlinetopic\" title=\"Online topic\">\n                      Online topic\n                    </label>\n                  </Col>\n                  <Col xs={24} sm={18} md={6} lg={4}>\n                    <Form.Item name=\"onlinetopic\">\n                      <Input autoComplete=\"off\" />\n                    </Form.Item>\n                  </Col>\n                  <Col\n                    xs={{ offset: 0, span: 24 }}\n                    sm={{ offset: 6, span: 18 }}\n                    md={{ offset: 0, span: 12 }}\n                    lg={{ offset: 0, span: 8 }}\n                  >\n                    <Form.Item name=\"onlineqos\">\n                      <Radio.Group>\n                        <Radio value={0}>QoS 0</Radio>\n                        <Radio value={1}>QoS 1</Radio>\n                        <Radio value={2}>QoS 2</Radio>\n                      </Radio.Group>\n                    </Form.Item>\n                  </Col>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                </Row>\n              </TabPane>\n              <TabPane tab=\"Dashboard\" key=\"2\" forceRender>\n                <Row gutter={[8, { xs: 2, sm: 2, md: 8, lg: 8 }]}>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                  <Col xs={24} sm={24} md={24} lg={16}>\n                    <Form.Item\n                      name=\"dashboard\"\n                      rules={[\n                        {\n                          validator: (_, value) =>\n                            value?.data?.trim()\n                              ? Promise.resolve()\n                              : Promise.reject(\n                                  new Error(\n                                    \"Please upload a dashboard definition file.\"\n                                  )\n                                ),\n                        },\n                      ]}\n                    >\n                      <UploadRaw\n                        accept=\".jsx\"\n                        className=\"myhConnectionForm-dashboard\"\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                </Row>\n              </TabPane>\n              <TabPane tab=\"Stylesheet\" key=\"3\" forceRender>\n                <Row gutter={[8, { xs: 2, sm: 2, md: 8, lg: 8 }]}>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                  <Col xs={24} sm={24} md={24} lg={16}>\n                    <Form.Item name=\"dashboardcss\">\n                      <UploadRaw\n                        accept=\".css\"\n                        className=\"myhConnectionForm-dashboardcss\"\n                      />\n                    </Form.Item>\n                  </Col>\n                  <Col xs={0} sm={0} md={0} lg={4} />\n                </Row>\n              </TabPane>\n            </Tabs>\n          </div>\n        </Layout.Content>\n      </Layout>\n    </Form>\n  );\n};\nexport default PanelConnect;\n","import React, {\n  useEffect,\n  useState,\n  useCallback,\n  createContext,\n  Context,\n  useContext,\n} from \"react\";\nimport { QoS } from \"mqtt\";\nimport ContentConnect from \"./connection/ContentConnect\";\nimport AppDashboard from \"./AppDashboard\";\nimport { ConnectInfo } from \"./connection/ConnectionInfo\";\nimport MQTTProvider, { OnlineInfo, useMQTTContext } from \"./mqtt/MQTTProvider\";\nimport \"antd/dist/antd.css\";\nimport AppError from \"./AppError\";\n\nfunction useLocalStorage(\n  key: string\n): [string | null, (s: string | null) => void] {\n  const [value, setStateValue] = useState<string | null>(() =>\n    localStorage.getItem(key)\n  );\n  const setValue = useCallback(\n    (s: string | null) => {\n      if (s) {\n        localStorage.setItem(key, s);\n      } else {\n        localStorage.removeItem(key);\n      }\n      setStateValue(s);\n    },\n    [key, setStateValue]\n  );\n  return [value, setValue];\n}\n\ntype AppContextValue = { setConnected: (value: string | null) => void };\n\nconst AppContext: Context<AppContextValue> = createContext<AppContextValue>({\n  setConnected: (s) => {},\n});\n\nexport const useAppContext = () => useContext(AppContext);\n\nconst App: React.FC<{}> = () => (\n  <MQTTProvider>\n    <MQTTApp />\n  </MQTTProvider>\n);\n\nconst MQTTApp: React.FC<{}> = () => {\n  const [, { connect, disconnect }] = useMQTTContext();\n  const [connected, setConnected] = useLocalStorage(\"mqttconnectstatus\");\n\n  useEffect(() => {\n    if (connected === \"connected\") {\n      const item = localStorage.getItem(\"mqttconnect\");\n      if (item) {\n        const connectinfo = JSON.parse(item) as ConnectInfo;\n        // const url = \"ws://broker.mqttdashboard.com:8000/mqtt\";\n        // const username = \"\";\n        // const password = \"\";\n        const {\n          url,\n          username,\n          password,\n          clientId,\n          keepalive,\n          connectTimeout,\n          reconnectPeriod,\n          onlinetopic,\n          onlineqos,\n        } = connectinfo;\n        const online: OnlineInfo | undefined = onlinetopic\n          ? {\n              topic: onlinetopic,\n              qos: onlineqos as QoS,\n              retain: true,\n            }\n          : undefined;\n\n        connect({\n          url,\n          online,\n          options: {\n            username,\n            password,\n            clientId,\n            keepalive,\n            connectTimeout,\n            reconnectPeriod,\n          },\n        });\n      }\n    } else {\n      disconnect();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connected]);\n\n  let app;\n  if (connected) {\n    const item = localStorage.getItem(\"mqttconnect\");\n    if (item) {\n      const connectinfo = JSON.parse(item) as ConnectInfo;\n      const jsx = connectinfo.dashboard.data;\n      const css = connectinfo.dashboardcss.data;\n      if (jsx) {\n        app = <AppDashboard jsx={jsx} css={css} />;\n      } else {\n        app = <AppError title=\"Failed to load JSX code.\" error=\"File empty.\" />;\n      }\n    } else {\n      app = <AppError title=\"Failed to load JSX code\" error=\"torage empty.\" />;\n    }\n  } else {\n    app = <ContentConnect />;\n  }\n\n  return (\n    <AppContext.Provider value={{ setConnected }}>{app}</AppContext.Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { Button, Layout } from \"antd\";\nimport AppHeader from \"./AppHeader\";\nimport { useAppContext } from \"./App\";\nimport \"./assets/main.css\";\n\nconst AppError: React.FC<{ title: string; error: string; jsx?: string }> = ({\n  title,\n  error,\n  jsx,\n}) => {\n  const { setConnected } = useAppContext();\n  return (\n    <Layout>\n      <AppHeader>\n        <div className=\"myhMenuDisplayButton\"></div>\n        <Button type=\"primary\" onClick={() => setConnected(null)}>\n          Disconnect\n        </Button>\n      </AppHeader>\n      <Layout.Content className=\"myhMainLayout\">\n        <div className=\"myhAppContent-panel\">\n          <div className=\"myhJSXErrorTitle\">{title}</div>\n          <div className=\"myhJSXErrorMessage\">{error}</div>\n          {jsx && <div className=\"myhJSXErrorJSX\">{jsx}</div>}\n        </div>\n      </Layout.Content>\n    </Layout>\n  );\n};\nexport default AppError;\n"],"sourceRoot":""}